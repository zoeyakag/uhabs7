cmake_minimum_required(VERSION 2.8.12)

file(GLOB files "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp")

foreach(file ${files})
    get_filename_component(bfile ${file} NAME_WE)
    add_executable(${bfile} ${bfile}.cpp)
    install(TARGETS ${bfile} DESTINATION bin)

    if(${DEPLOY_FILES_TO_REMOTE} MATCHES "yes")
        add_deployment_binary(${bfile} "bin")
        add_deployment_source(${bfile}.cpp "src")
    endif()

endforeach()

# Programs brought in from core
foreach(file new_propagator command_generator gige_list gige_snap julian netperf_send netperf_listen serial_talk serial_listen udp_send udp_listen initialize_time)
    add_executable(${file} "${COSMOS_SOURCE}/core/programs/general/${file}.cpp")
    install(TARGETS ${file} DESTINATION bin)
endforeach()

#add_executable(command_generator "${COSMOS_SOURCE}/core/programs/general/command_generator.cpp")
#target_link_libraries(command_generator CosmosSupport)
#install(TARGETS command_generator DESTINATION bin)

target_link_libraries(command_generator CosmosAgent)
#target_link_libraries(command_generator_remote CosmosAgent)
#target_link_libraries(cosmos_size CosmosAgent)
#target_link_libraries(cubesat2obj CosmosCad CosmosData)
#target_link_libraries(fast_contacts CosmosPhysics CosmosAgent)
#target_link_libraries(fast_propagator CosmosPhysics CosmosAgent)
#target_link_libraries(file_send_command CosmosAgent CosmosTransfer)
#target_link_libraries(file_send_message CosmosAgent CosmosTransfer)
#target_link_libraries(get_contacts CosmosPhysics CosmosAgent)
#target_link_libraries(get_contacts_tle CosmosPhysics CosmosAgent)
#target_link_libraries(gige_ffc CosmosDeviceGeneral)
target_link_libraries(gige_list CosmosDeviceGeneral)
target_link_libraries(gige_snap CosmosDeviceGeneral CosmosError)
#target_link_libraries(json2tab CosmosJson)
target_link_libraries(julian CosmosAgent CosmosTime)
target_link_libraries(netperf_listen CosmosNetwork CosmosSlip)
target_link_libraries(netperf_send CosmosNetwork CosmosSlip)
target_link_libraries(new_propagator CosmosPhysics)
#target_link_libraries(propagator CosmosPhysics CosmosAgent)
target_link_libraries(serial_listen CosmosDeviceSerial CosmosError)
target_link_libraries(serial_talk CosmosDeviceSerial CosmosError)
#target_link_libraries(state2tle CosmosConvert)
#target_link_libraries(tab2json CosmosJson)
#target_link_libraries(tle2state CosmosConvert)
target_link_libraries(udp_listen CosmosAgent)
target_link_libraries(udp_send CosmosAgent)
target_link_libraries(initialize_time CosmosAgent)
#target_link_libraries(check_satnogs CosmosAgent CosmosJson CosmosTime)
#target_link_libraries(shift_solid_thermal CosmosTime CosmosConvert)

